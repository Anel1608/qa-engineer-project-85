- summary:
    Проверка регистрации
  requirement:
    Пользователь должен иметь возможность зарегистрироваться на сайте
  prerequisites:
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data:
    Nickname = Name Email = user@mail.ru Password = 123456
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result:
    Пользователь зарегистрирован. Попадает на главную страницу
    
- summary:
    Проверка авторизации
  requirement:
    Пользователь должен иметь возможность авторизоваться на сайте
  prerequisites:
    Открыта страница https://codebattle.hexlet.io/session/new?locale=en&next=%2F
    Успешно зарегистрирован пользователь
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result:
    Пользователь авторизован. Попадает на главную страницу
     
- summary: 
    Проверка авторизации через GitHub
  requirement: 
    При верном вводе логина и пароля GitHub происходит успешная авторизация на codebattle
  prerequisites: 
    Открыта страница логина. Аккаунт на GitHub создан и авторизирован.
  test-data: 
    Логин = Anel1608 Пароль = Tima07052016
  steps:
    - Нажимаем кнопку "Sign In with GitHub"
    - В модальном окне подтверждаем авторизацию через аккаунт GitHub
  expected-result: |
    Пользователь должен попасть на главную страницу с сообщением "Successfully authenticated" и авторизоваться
    
- summary:
    Проверка авторизации через Discord
  requirement:
    Пользователь должен иметь возможность авторизоваться через Discord
  prerequisites:
    Открыта страница логина. Аккаунт на Discord создан и авторизован.
  test-data:
    Логин = Test!1 Пароль = Test!1-85
  steps:
    - Нажимаем кнопку "Sign In with Discord"
    - В модальном окне подтверждаем автризацию через аккаунт Discord
  expected-result:
    Пользователь должен попасть на главную страницу с сообщением "Successfully authenticated" и авторизоваться
    
- summary:
    Проверка выбора задачи при создании игры
  requirement:
    Пользователь должен иметь возможность выбрать задачу при создании игры.
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать сложность, time-limit, Game Type, rect_area, tags = math rest
    - Нажать "Create battle"
  expected-result:
    Откроется терминал с выбранной задачей.
    
- summary:
    Проверка создания игры с ботом
  requirement:
    Пользователь должен иметь возможность выбрать соперника
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать сложность, time-limit, Game Type = With a bot, Task, tags
    - Нажать "Create battle"
  expected-result:
    Откроется игра с ботом
  
- summary:
    Проверка отображения кода соперника
  requirement:
    Пользователь должен видеть код соперника в режиме онлайн
  prerequisites:
    Создана игра с ботом
  test-data:
    Email = user@mail.ru Password = 123456
  steps:  
    - Нажать "Create battle"  
  expected-result:
    Создатся игра с выбранными параметрами, справа отобразится терминал с кодом соперника
  
- summary:
    Проверка выбора языка программирования
  requirement:
    Пользователь должен иметь возможность выбрать язык программирования
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать сложность, time-limit, Game Type, Task, tags
    - Нажать "Create battle"
    - Над терминалом открыть список и выбрать "Python"
  expected-result: 
    Терминал изменит язык программирования, на котором будет проверять решение
    
- summary:
    Проверка решения задачи
  requirement:
    Пользователь должен иметь возможность проверить свое решение неограниченное количество раз
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать сложность, time-limit, Game Type, Task, tags
    - Нажать "Create battle"
    - Решить задачу
    - Нажать над терминалом кнопку "проверить решение"
  expected-result:
    Появится сообщение о проверке решения
  
- summary:
    Проверка входа в личный кабинет
  requirement:
    Пользователь должен иметь возможность войти в личный кабинет и просмотреть информацию
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "My Profile"
  expected-result:
    Откроется личный кабинет
    
- summary:
    Проверка приглашения соперника по ссылке
  requirement:
    Пользователь должен иметь возможность пригласить в игру соперника по ссылке
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать сложность, time-limit, Game Type = With other users, Task, tags
    - Нажать "Create battle"
    - Скопировать ссылку
  expected-result:
    К игре подключится получатель ссылки

- summary:
    Проверка выбора уровня сложности игры
  requirement:
    Пользователь должен иметь возможность выбрать уровень сложности игры
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать уровень сложности и указать остальные параметры игры
    - Нажать "Create battle"
  expected-result:
    Создастся игра с выбранным уровнем сложности
    
- summary:
    Проверка просмотра истории завершенных игр
  requirement:
    Пользователю доступен просмотр истории завершенных игр
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Completed games"  
  expected-result:
    Пользователь увидит вкладку с историей последних прошедших баттлов, отсортированных по дате и времени окончания
  
- summary:
    Проверка просмотра записи завершенных игр
  requirement:
    Пользователю доступна запись игры после ее завершения
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Completed games"
    - Нажать кнопку "Show"
  expected-result:
    Пользователь увидит запись игры
    
- summary:
    Проверка отправки сообщений в чат
  requirement:
    Зарегистрированному пользователю доступен чат
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Ввести сообщение в окно чата
    - Нажать кнопку "Send"
  expected-result:
    Сообщение отобразится в чате
    
- summary: 
    На странице батла можно перевести задачу на выбранный язык
  requirement:
    Мультиязычность задач (русский и английский)
  prerequisites:
    Открыта главная страница
  test-data: 
    Email = user@mail.ru Password = 123456
  steps:
    - Нажать на "Create a game"
    - В модальном окне выбрать сложность, time-limit, Game Type, Task, tags
    - Нажать "Create battle"
    - В поле задачи раскрыть список языков (изначально English)
    - Нажать "Русский"
  expected-result: 
    Задача переведётся с английского на русский язык
    

- summary: 
    Пользователь не может изменять код соперника
  requirement: 
    Игрок не может менять код соперника
  prerequisites:
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Выбрать вкладку "Lobby"
    - Напротив открытого лобби нажать "Fight"
    - Навести курсор на любое место в терминале соперника и нажать ЛКМ
    - Начать вводить "abcde"
  expected-result: |
    Ничего не должно произойти. Вводимые символы не должны отображаться в терминале соперника


- summary:
    Совместимость с браузером Яндекс
  requirement:
    Сайт должен быть протестирован на совместимость с последними версиями браузеров
  prerequisites:
    Установлена последняя версия бразуера Яндекс Браузер
  test-data: Сайт = https://codebattle.hexlet.io/#lobby
  steps:
    - Открываем сайт в Яндекс браузере
  expected-result:
    Сайт открывается

- summary:
    Совместимость с браузером Google Chrome
  requirement:
    Сайт должен быть протестирован на совместимость с последними версиями браузеров
  prerequisites:
    Установлена последняя версия бразуера Google Chrome
  test-data: Сайт = https://codebattle.hexlet.io/#lobby
  steps:
    - Открываем сайт в браузере Google Chrome
  expected-result:
    Сайт открывается

- summary:
    Совместимость с браузером Firefox
  requirement:
    Сайт должен быть протестирован на совместимость с последними версиями браузеров
  prerequisites:
    Установлена последняя версия бразуера Firefox Browser
  test-data: Сайт = https://codebattle.hexlet.io/#lobby
  steps:
    - Открываем сайт в браузере Firefox Browser
  expected-result:
    Сайт открывается

- summary:
    На главной странице авторизованным пользователям выводится список лидеров, рейтинг
  requirement:
    На главной странице авторизованным пользователям выводится список лидеров, рейтинг
  prerequisites:
    Пользователь успешно авторизован
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Открываем главную страницу
  expected-result:
    Отображается таблица со списком лидеров и их рейтинг
    
- summary:
    Успешное создание турнира
  requirement:
    Пользователь должен иметь возможность создать турнир
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data:
    Nickname = Elena Email = user@mail.ru Password = 123456
  steps:
    - Кликаем на свой Nickname
    - Выбираем "турниры"
    - Заполняем данные турнира
    - Нажимаем "Создать"
  expected-result:
    Создается турнир

- summary:
    Cоздание турнира с пустым полем "Name"
  requirement:
    Если не заполнить поле "Name" турнир создать нельзя
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Кликаем на свой Nickname
    - Выбираем "турниры"
    - Заполняем данные турнира, кроме поля "Name"
    - Нажимаем "Создать"
  expected-result:
    Турнир не создан
    
- summary:
    Создание турнира прошедшей датой
  requirement:
    Создание турнира прошедшей датой
  prerequisites:
    Пользователь авторизован
    Открыта главная страница
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Кликаем на свой Nickname
    - Выбираем "турниры"
    - Заполняем данные турнира
    - Дату указываем "16.02.2021 11:00"
    - Нажимаем "Создать"
  expected-result:
    Турнир не создан
 
       
- summary:
    Регистрация на уже регистрированный Email
  requirement:
    При вводе ранее зарегистрированного Email регистрация не пройдет
  prerequisites:
    Пользователь успешно зарегистрирован
    Открыта страница регистрации
  test-data:
    Nickname = Elena Email = user@mail.ru Password = 123456
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result:
    Пользователь не зарегистрирован
  
    
- summary:
    Регистрация с пустым полем "Nickname"
  requirement:
    Без ввода Nickname регистрация не пройдет
  prerequisites:
    Открыта страница регистрации
  test-data:
    Email = user@mail.ru Password = 123456
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result:
    Пользователь не зарегистрирован
    
- summary:
    Регистрация с пустым полем "Email"
  requirement:
    Без ввода Email регистрация не пройдет
  prerequisites:
    Открыта страница регистрации
  test-data:
    Nickname = Name Password = 123456
  steps:
    - Вводим Nickname
    - Вводим Password
    - Нажимаем кнопку "Submit"
  expected-result:
    Пользователь не зарегистрирован
    
- summary:
    Регистрация с пустым полем "Password"
  requirement:
    Без ввода Password регистрация не пройдет
  prerequisites:
    Открыта страница регистрации
  test-data:
    Nickname = Name Email = user@mail.ru 
  steps:
    - Вводим Nickname
    - Вводим Email
    - Нажимаем кнопку "Submit"
  expected-result:
    Пользователь не зарегистрирован
    
